services:
  db:
    image: postgres:17
    container_name: ecom_db
    environment:
      #POSTGRES_HOST_AUTH_METHOD: trust  # Отключаем аутентификацию для разработки
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./app/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: ecom_app
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/postgres
      # Добавляем CORS настройки
      CORS_ORIGINS: "http://localhost:8000,http://frontend:3000, http://localhost:3000, http://localhost:8100,
      http://10.0.2.2,
      http://192.168.1.*"
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app
    command: >
      sh -c "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  frontend:
    container_name: ecom_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - app
    stdin_open: true
    tty: true

  mobile:
    container_name: ecom_mobile
    build:
      context: ./myMobileApp
      dockerfile: Dockerfile
    ports:
      - "8100:8100"  
      - "35729:35729"  
    volumes:
      - ./myMobileApp:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - app  
    stdin_open: true
    tty: true
    command: sh -c "npm install && ionic serve --external"

volumes:
  postgres_data:

networks:
  default:
    name: ecom_network